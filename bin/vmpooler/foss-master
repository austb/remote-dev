#!/usr/bin/env bash

set -euo pipefail

puppet_collection=puppet6
puppetdb_version=latest
puppetserver_version=latest
puppet_version=latest
platform="centos-7-x86_64"
pdb_upgrade_version=

declare -A known_mappings
known_mappings["centos-6-x86_64"]="-1.el6"
known_mappings["centos-7-x86_64"]="-1.el7"
known_mappings["centos-8-x86_64"]="-1.el8"
known_mappings["redhat-6-x86_64"]="-1.el6"
known_mappings["redhat-7-x86_64"]="-1.el7"
known_mappings["redhat-8-x86_64"]="-1.el8"
known_mappings["ubuntu-1404-x86_64"]="-1trusty"
known_mappings["ubuntu-1604-x86_64"]="-1xenial"
known_mappings["ubuntu-1804-x86_64"]="-1bionic"

function printerr {
  printf "$@\n" >&2
}

function usage {
  cat <<USAGE
Usage: foss-master [OPTIONS]
    --platform        PLATFORM       the vmfloaty instance to get (default: $platform)
    --collection      COLLECTION     the Puppet Platform to install (default: $puppet_collection)
    --pdbver          VERSION        the PuppetDB version to install (default: $puppetdb_version)
    --upgrade-pdbver  VERSION        the puppetdb version to upgrade to after install (default: ${pdb_upgrade_version:-<none>})
USAGE
}

function misuse {
  usage >&2
  exit 2
}

while test $# -gt 0; do
  case "$1" in
    --platform)
      shift
      test $# -gt 0 || misuse
      platform="$1"
      shift
      ;;
    --collection)
      shift
      test $# -gt 0 || misuse
      puppet_collection="$1"
      shift
      ;;
    --pdbver)
      shift
      test $# -gt 0 || misuse
      puppetdb_version="$1"
      shift
      ;;
    --upgrade-pdbver)
      shift
      test $# -gt 0 || misuse
      pdb_upgrade_version="$1"
      shift
      ;;
    -h|--help)
      usage
      exit 0
      ;;
    *)
        misuse
  esac
done

if test -z "${known_mappings[$platform]:-}"; then
  case "$platform" in
    centos[0-9])
      version="${platform#centos}"
      platform="centos-$version-x86_64"
      ;;
    redhat[0-9])
      version="${platform#redhat}"
      platform="redhat-$version-x86_64"
      ;;
    ubuntu[0-9][0-9])
      version="${platform#ubuntu}"
      platform="ubuntu-${version}04-x86_64"
      ;;
    *)
      printerr "No known version mapping for system '$platform'"
      exit 2
      ;;
  esac
fi

if test "$puppetdb_version" != latest; then
  puppetdb_version="$puppetdb_version${known_mappings[$platform]}"
fi


function floaty_get_hostname {
  floaty get --json "$platform" | jq -r ".[\"$platform\"][0]"
}

host="$(floaty_get_hostname)"

bolt plan run dev::foss_master \
  master="$host" \
  collection="$puppet_collection" \
  puppetdb_version="$puppetdb_version"

printerr "Open Source Puppet Master successfully setup on $host"

function upgrade_el {
  if test $# -ne 1; then
    printerr "Wrong number of arguments to upgrade_el $#"
    exit 2
  fi

  version="$1"
  bolt command run \
    --targets "$host" \
    "wget https://builds.delivery.puppetlabs.net/puppetdb/$pdb_upgrade_version/artifacts/el/$version/$puppet_collection/x86_64/puppetdb-${pdb_upgrade_version%%.SNAPSHOT*}-0.1SNAPSHOT${pdb_upgrade_version##*SNAPSHOT}.el$version.noarch.rpm -O /tmp/pdb-$pdb_upgrade_version"

  bolt command run \
    --targets "$host" \
    "rpm -Uvh /tmp/pdb-$pdb_upgrade_version"
}

function upgrade_ubuntu {
  if test $# -ne 1; then
    printerr "Wrong number of arguments to upgrade_el $#"
    exit 2
  fi

  codename="$1"
  bolt command run \
    --targets "$host" \
    "wget https://builds.delivery.puppetlabs.net/puppetdb/$pdb_upgrade_version/artifacts/deb/$codename/$puppet_collection/puppetdb_${pdb_upgrade_version%%.SNAPSHOT*}-0.1SNAPSHOT${pdb_upgrade_version##*SNAPSHOT}${codename}_all.deb -O /tmp/pdb-$pdb_upgrade_version"

  bolt command run \
    --targets "$host" \
    "dpkg -i --force-confold /tmp/pdb-$pdb_upgrade_version"
}


if test ! -z "$pdb_upgrade_version"; then
  printerr "Upgrading PuppetDB to $pdb_upgrade_version"
  case "$platform" in
    centos-6-x86_64|redhat-6-x86_64)
      upgrade_el 6
      ;;
    centos-7-x86_64|redhat-7-x86_64)
      upgrade_el 7
      ;;
    centos-8-x86_64|redhat-8-x86_64)
      upgrade_el 8
      ;;
    ubuntu-1404-x86_64)
      upgrade_ubuntu trusty
      ;;
    ubuntu-1604-x86_64)
      upgrade_ubuntu xenial
      ;;
    ubuntu-1804-x86_64)
      upgrade_ubuntu bionic
      ;;
    *)
      printerr "Don't know how to upgrade PuppetDB on platform: '$platform'"
      exit 2
      ;;
  esac
fi
